package schedule;

import java.text.ParseException; //catches a exception if todays date can´t fit into the wanted format
import java.text.SimpleDateFormat; //extracts the milliseconds into a more civilian day date format
import java.util.Calendar; //needed to calculate amount of milliseconds since newyear 1970
import java.util.Date; //a format dates are stored in

public class Weekday { //handles day arrangement of modules on the schedule

    public static String Weekday() {
        Date date; //initialices date
        String weekDay = null;
        date = new Date();//gets todays date and parses it to a more simpified one
        Calendar c = Calendar.getInstance();//calender is created and called upon
        c.setTime(date);                    //the calender is set with today date
        int dayOfWeek = c.get(Calendar.DAY_OF_WEEK); //gets a integer between to be compared with the weekday

        //checks which day it is
        if (Calendar.MONDAY == dayOfWeek) weekDay = "Mandag";
        else if (Calendar.TUESDAY == dayOfWeek) weekDay = "Tirsdag";
        else if (Calendar.WEDNESDAY == dayOfWeek) weekDay = "Onsdag";
        else if (Calendar.THURSDAY == dayOfWeek) weekDay = "Torsdag";
        else if (Calendar.FRIDAY == dayOfWeek) weekDay = "Fredag";
        else if (Calendar.SATURDAY == dayOfWeek) weekDay = "Lørdag";
        else if (Calendar.SUNDAY == dayOfWeek) weekDay = "Søndag";

        return weekDay;//returns day after it is convertet to a string
    }

    public static String Today() { //returns today´s date
        Calendar c = Calendar.getInstance();
        c.setTime(new Date());
        SimpleDateFormat s = new SimpleDateFormat("yyyy-dd-MM HH:mm:ss");//today down to every detail
        String format = s.format(c.getTime()); //new Date should have todays date after parsed since Date is generated by currentmillis
        return format; //returns the Date, can be parsed upon recieve
    }

    //you can input i for +day
    public static String Weekend(int i) {
        SimpleDateFormat s = new SimpleDateFormat("yyyy-dd-MM HH:mm:ss");//today down to every detail
        Date date = new Date(); //gets today's date
        Calendar c = Calendar.getInstance(); //creates a new calender instance
        c.setTime(date); //sets the calender to today
        c.add(Calendar.DATE, i); //adds i days to the calender (1 if sunday and 2 if saturday)
        date = c.getTime(); //gets the time of the calender and sets it to be the variable date
        String format = s.format(date); //new Date should have todays date after parsed since Date is generated by currentmillis
        return format; //returns the date in the SimpleDateFormat
    }

    //you can input both i for +week and y for +year
    public static String todayWeek(int i, int y) { //returns the weeknumber
        Date date = new Date(); //gets today's date
        Calendar c = Calendar.getInstance(); //creates a new calender instance
        c.setTime(date); //sets the calender to the current Date
        c.add(Calendar.WEEK_OF_YEAR, i); //adds amount of weeks to the calender
        c.add(Calendar.YEAR, y); //adds a year (only used if the student checks the schedule in the new year)
        int week = c.get(Calendar.WEEK_OF_YEAR); //gets the week number of the year
        int length = String.valueOf(week).length(); //gets the amount of digits on the number
        if (length==1) { //checks if the int is only one digit
            return "0"+week;//lectio needs it to be doubledigit
        } else {
            return ""+week;//function returns String
        }
    }

    public static int todayYear(int i) { //returns the year of today
        Date date = new Date(); //gets today's date
        Calendar c = Calendar.getInstance(); //creates a calender
        c.setTime(date); //sets the calender to today's time
        c.add(Calendar.YEAR, i); //adds i amount of years to the date
        int year = c.get(Calendar.YEAR); //retrives the year of the calender
        return year; //returns the year
    }
}
