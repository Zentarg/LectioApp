package schedule;

import java.text.ParseException; //catches a exception if todays date can´t fit into the wanted format
import java.text.SimpleDateFormat; //extracts the milliseconds into a more civilian day date format
import java.util.Calendar; //needed to calculate amount of milliseconds since newyear 1970
import java.util.Date; //a format dates are stored in

public class Weekday { //handles day arrangement of modules on the schedule

    public String Weekday() {
        Date date; //initialices date

        try {
            date = new SimpleDateFormat("dd/mm/yyyy").parse(Today());//gets todays date and parses it to a more simpified one
        } catch (ParseException e) {//catches parse exceptions
                                    //beware that this will return a parse exception if Today hits an exception
            e.printStackTrace();    //prints error message to console
            return null;
        }
        Calendar c = Calendar.getInstance();//calender is created and called upon
        c.setTime(date);                    //the calender is set with today date
        int dayOfWeek = c.get(Calendar.DAY_OF_WEEK);//calender returns an integer which symbolises the weekday
        return Day(dayOfWeek);//returns day after it is convertet to a string
    }

    public static String Today() { //returns today´s date
        try{
        SimpleDateFormat s = new SimpleDateFormat("yyyy-dd-MM HH:mm:ss");//today down to every detail
        String format = s.format(new Date()); //new Date should have todays date after parsed since Date is generated by currentmillis
        return format; //returns the Date, can be parsed upon recieve
        } catch (Exception e) { //catches all exceptions
            e.printStackTrace(); //prints any errors that might occur
            return null; //should never return null and might cause a crash if i does
        }
    }


    private static String Day(int args) { //returns the day of week as a string
        // every day is defined by a number
        final int Mon = 0;
        final int Tue = 1;
        final int Wed = 2;
        final int Thu = 3;
        final int Fri = 4;
        final int Sat = 5;
        final int Sun = 6;

        switch (args) { //converts weekday from a number to a word.
            case Mon: { return "Mandag"; }
            case Tue: { return "Tirsdag"; }
            case Wed: { return "Onsdag"; }
            case Thu: { return "Torsdag"; }
            case Fri: { return "Fredag"; }
            case Sat: { return "Lørdag"; }
            case Sun: { return "Søndag"; }
        }
        return null; //if args is out of the range [0;6] it returns null
    }
}
